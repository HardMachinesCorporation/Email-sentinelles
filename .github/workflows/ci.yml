name: CI Pipeline

on:
  push:
    branches:
      - test/*
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run migrations
        run: pnpm run migration:run

      - name: Run unit tests
        run: pnpm run test

      - name: Run E2E tests
        run: pnpm run test:e2e

      - name: Clean up database after tests
        if: always()
        run: pnpm run migration:revert  # Nettoie la base aprÃ¨s les tests

  push-to-main:
    needs: test  # S'exÃ©cute uniquement si les tests passent
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/test/*'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Merge to main if tests pass
        id: merge_step
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout main
          git merge --no-ff $(echo $GITHUB_REF | sed 's/refs\/heads\///') || echo "MERGE_FAILED=true" >> $GITHUB_ENV
          git push origin main || echo "PUSH_FAILED=true" >> $GITHUB_ENV

      - name: Rollback if merge or push fails
        if: env.MERGE_FAILED == 'true' || env.PUSH_FAILED == 'true'
        run: |
          git reset --hard HEAD~1  # Annule le dernier commit si le merge a Ã©chouÃ©
          git push origin main --force
          echo "ðŸš¨ Merge failed! Rolling back to previous commit."
